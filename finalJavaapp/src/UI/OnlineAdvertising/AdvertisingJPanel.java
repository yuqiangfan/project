/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.OnlineAdvertising;

import Business.Enterprise.OnlineStoreEnterprise;
import Business.Nutrition.Nutrition;
import Business.Food.Dish;
import Business.Food.Sample;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PhythonNo1
 */
public class AdvertisingJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private OnlineStoreEnterprise enterprise;
    private UserAccount userAccount;
    /**
     * Creates new form AdvertisingWorkAreaJPanel
     */
    public AdvertisingJPanel(JPanel userProcessContainer, UserAccount account, OnlineStoreEnterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        
        valueLabel.setText(enterprise.getName());
    }

        public void populateItemTable() {
        DefaultTableModel model = (DefaultTableModel)itemTbl.getModel();
        model.setRowCount(0);
        
        // Define wig attributes here is not good
        if(curlRadioBtn.isSelected()) {
            for (Dish hair : enterprise.getDishDirectory().getDishList()) {
                if(hair.getName().equals("dish")) {
                    Object[] row = new Object[2];
                    row[0] = hair;
                    row[1] = 3;
            
                    model.addRow(row);
                }
                
                if(hair.getName().equals("Video")) {
                    Sample wig = (Sample) hair;                   
                    for (Nutrition gas: wig.getNutrDirectory().getNutrList()) {
                        Object[] row = new Object[3];
                        row[0] = gas;
                        row[2] = gas.getWeight()+" ";
                        model.addRow(row);
                    }
                    priceTxt.setText(hair.getPrice()+"");
                }
            }
            return;
        }
        
        if(longRadioBtn.isSelected()) {
            for (Dish hair : enterprise.getDishDirectory().getDishList()) {
                if(hair.getName().equals("dish")) {
                    Object[] row = new Object[2];
                    row[0] = hair;
                    row[1] = 2;
            
                    model.addRow(row);
                }
                
                if(hair.getName().equals("Article")) {
                    Sample wig = (Sample) hair;                   
                    for (Nutrition gas: wig.getNutrDirectory().getNutrList()) {
                        Object[] row = new Object[3];
                        row[0] = gas;
                        row[2] = gas.getWeight()+" ";
                        model.addRow(row);
                    }
                    priceTxt.setText(hair.getPrice()+"");
                }
            }
            return;
        }
        
        if(shortRadioBtn.isSelected()) {
            for (Dish diet : enterprise.getDishDirectory().getDishList()) {
                if(diet.getName().equals("dish")) {
                    Object[] row = new Object[2];
                    row[0] = diet;
                    row[1] = 1;
            
                    model.addRow(row);
                }
                
                if(diet.getName().equals("Dynamic Advertise")) {
                    Sample wig = (Sample) diet;                   
                    for (Nutrition gas: wig.getNutrDirectory().getNutrList()) {
                        Object[] row = new Object[3];
                        row[0] = gas;
                        row[2] = gas.getWeight()+" ";
                        model.addRow(row);
                    }
                    priceTxt.setText(diet.getPrice()+"");
                }
            }
        }
        return;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        curlRadioBtn = new javax.swing.JRadioButton();
        longRadioBtn = new javax.swing.JRadioButton();
        shortRadioBtn = new javax.swing.JRadioButton();
        produceJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        enterpriseLabel.setText("Department :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 142, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 160, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        curlRadioBtn.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(curlRadioBtn);
        curlRadioBtn.setText("Video");
        curlRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curlRadioBtnActionPerformed(evt);
            }
        });
        add(curlRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 115, -1, -1));

        longRadioBtn.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(longRadioBtn);
        longRadioBtn.setText("Article");
        longRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longRadioBtnActionPerformed(evt);
            }
        });
        add(longRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 141, -1, -1));

        shortRadioBtn.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(shortRadioBtn);
        shortRadioBtn.setText("Dynamic Ad");
        shortRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shortRadioBtnActionPerformed(evt);
            }
        });
        add(shortRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 167, -1, -1));

        produceJButton.setText("Produce");
        produceJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produceJButtonActionPerformed(evt);
            }
        });
        add(produceJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, -1, -1));

        itemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Cost", "Usage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 115, 330, 98));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Profit:   $");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        priceTxt.setEditable(false);
        add(priceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 41, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pic7.png"))); // NOI18N
        jLabel10.setMaximumSize(new java.awt.Dimension(911, 600));
        jLabel10.setMinimumSize(new java.awt.Dimension(500, 629));
        jLabel10.setPreferredSize(new java.awt.Dimension(500, 626));
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(-180, 0, 840, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AdvertisingWorkAreaJPanel mwjp = (AdvertisingWorkAreaJPanel) component;
        mwjp.populateInventoryTable();
        mwjp.refreshGasSavedText();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void longRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longRadioBtnActionPerformed
        // TODO add your handling code here:
        populateItemTable();
    }//GEN-LAST:event_longRadioBtnActionPerformed

    private void curlRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curlRadioBtnActionPerformed
        // TODO add your handling code here:
        populateItemTable();
    }//GEN-LAST:event_curlRadioBtnActionPerformed

    private void shortRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shortRadioBtnActionPerformed
        // TODO add your handling code here:
        populateItemTable();
    }//GEN-LAST:event_shortRadioBtnActionPerformed

    private void produceJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produceJButtonActionPerformed
        // TODO add your handling code here:
        if(curlRadioBtn.isSelected()) {
            // check remaining hair
            
            for (Dish dish: enterprise.getDishDirectory().getDishList()) {
                if(dish.getName().equals("dish")) {  
                    // quantity validation
                    if(dish.getQuantity() < 3) {
                        JOptionPane.showMessageDialog(null, "Dish sample is insufficient.", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    dish.setQuantity(dish.getQuantity() - 3);
                }
                if(dish.getName().equals("Video")) {
                    dish.setQuantity(dish.getQuantity() + 1);
                    
                    // save gas
                    Sample curlWig = (Sample) dish;
                    for (Nutrition totalGas: enterprise.getNutrDirectory().getNutrList()) {
                        for(Nutrition unitGas: curlWig.getNutrDirectory().getNutrList()) {
                            if(totalGas.getName().equals(unitGas.getName())) {
                                totalGas.setWeight(totalGas.getWeight() + unitGas.getWeight());
                            }
                        }
                    }
                
                }
            }
        }
        
        if(longRadioBtn.isSelected()) {
            for (Dish dish: enterprise.getDishDirectory().getDishList()) {
                if(dish.getName().equals("dish")) {            
                    if(dish.getQuantity() < 2) {
                        JOptionPane.showMessageDialog(null, "Dish is insufficient.", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    dish.setQuantity(dish.getQuantity() - 2);
                }
                if(dish.getName().equals("Article")) {
                    dish.setQuantity(dish.getQuantity() + 1);
                // save gas
                    Sample longWig = (Sample) dish;
                    for (Nutrition totalGas: enterprise.getNutrDirectory().getNutrList()) {
                        for(Nutrition unitGas: longWig.getNutrDirectory().getNutrList()) {
                            if(totalGas.getName().equals(unitGas.getName())) {
                                totalGas.setWeight(totalGas.getWeight() + unitGas.getWeight());
                            }
                        }
                    }
                
                }
            }
        }
        
        if(shortRadioBtn.isSelected()) {
            for (Dish dish: enterprise.getDishDirectory().getDishList()) {
                if(dish.getName().equals("dish")) {
                    if(dish.getQuantity() < 1) {
                        JOptionPane.showMessageDialog(null, "Hair is insufficient.", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    dish.setQuantity(dish.getQuantity() - 1);
                }
                if(dish.getName().equals("Dynamic Ad")) {
                    dish.setQuantity(dish.getQuantity() + 1);
                // save gas
                    Sample shortWig = (Sample) dish;
                    for (Nutrition totalGas: enterprise.getNutrDirectory().getNutrList()) {
                        for(Nutrition unitGas: shortWig.getNutrDirectory().getNutrList()) {
                            if(totalGas.getName().equals(unitGas.getName())) {
                                totalGas.setWeight(totalGas.getWeight() + unitGas.getWeight());
                            }
                        }
                    }
                
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "Sample produced successfully.", "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_produceJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton curlRadioBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JTable itemTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton longRadioBtn;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JButton produceJButton;
    private javax.swing.JRadioButton shortRadioBtn;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
