/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.GourmetPurchasing;

import Business.Enterprise.NutritionDiningRoomEnterprise;
import Business.Food.Material;
import Business.Network.Network;
import Business.Organization.NutritionPurchaseOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaterialRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PhythonNo1
 */
public class PurchasingWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private NutritionPurchaseOrganization organization;
    private NutritionDiningRoomEnterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    /**
     * Creates new form 
     */
    public PurchasingWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, NutritionPurchaseOrganization organization, NutritionDiningRoomEnterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
         populateProcessRequestTable();
        valueLabel.setText(enterprise.getName()+", "+organization.getName());
        populateProcessRequestTable();
        populateInventoryTable();
        populateRequestTable();
         populateProcessRequestTable();
    }

    public void populateProcessRequestTable() {
        DefaultTableModel model = (DefaultTableModel)processRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getQuantity();
            row[2] = request.getSender();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row);
        }
    }
    
    public void populateInventoryTable() {
        DefaultTableModel model = (DefaultTableModel)inventoryJTable.getModel();
        model.setRowCount(0);
        
        for (Material material : enterprise.getMaterialDirectory().getMaterialList()) {
            //if(material.getQuantity()!=0) {
                Object[] row = new Object[2];
                row[0] = material;
                // accurate to 2 decimal places
                //row[1] = String.format("%.2f", material.getQuantity());
            row[1] = String.format("%d", material.getQuantity());
            
                model.addRow(row);        
            //}
        }
    }
    
    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            int quantity = ((MaterialRequest) request).getQuantity();
            row[1] = quantity+"";
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        processRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshSendBtn = new javax.swing.JButton();
        refreshSendBtn1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        requestJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryJTable = new javax.swing.JTable();
        refreshInventoryBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addOneBtn = new javax.swing.JButton();
        deleteOneBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(500, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        enterpriseLabel.setText("Department :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 0, 142, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 11, 147, -1));

        processRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material", "Quantity", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(processRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 84, 359, 96));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 191, -1, -1));

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 191, -1, -1));

        refreshSendBtn.setText("Refresh");
        refreshSendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshSendBtnActionPerformed(evt);
            }
        });
        add(refreshSendBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 49, -1, -1));

        refreshSendBtn1.setText("Refresh");
        refreshSendBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshSendBtn1ActionPerformed(evt);
            }
        });
        add(refreshSendBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 378, -1, -1));

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Material", "Quantity", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(requestJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 412, 364, 97));

        requestJButton.setText("Request");
        requestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestJButtonActionPerformed(evt);
            }
        });
        add(requestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 515, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel3.setText("Request Materials");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 368, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel4.setText("Process Request");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 41, -1, -1));

        inventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Material", "Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(inventoryJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 265, 359, 97));

        refreshInventoryBtn.setText("Refresh");
        refreshInventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshInventoryBtnActionPerformed(evt);
            }
        });
        add(refreshInventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 240, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel2.setText("Gourmet Inventory");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 220, -1, -1));

        addOneBtn.setText("+1");
        addOneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOneBtnActionPerformed(evt);
            }
        });
        add(addOneBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 515, 50, -1));

        deleteOneBtn.setText("-1");
        deleteOneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOneBtnActionPerformed(evt);
            }
        });
        add(deleteOneBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 515, 50, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NetBeansProjects/finalJavaapp/src/resources/pic5.png"))); // NOI18N
        jLabel6.setMaximumSize(new java.awt.Dimension(911, 600));
        jLabel6.setMinimumSize(new java.awt.Dimension(500, 629));
        jLabel6.setPreferredSize(new java.awt.Dimension(500, 626));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, 0, 840, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

    int selectedRow = processRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        MaterialRequest request = (MaterialRequest)processRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateProcessRequestTable();


    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = processRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        MaterialRequest request = (MaterialRequest)processRequestJTable.getValueAt(selectedRow, 0);
        // Validate assignment
        if(request.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "Please click \"Assign to me\" first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        request.setStatus("Processing");

        ProcessJPanel processJPanel = new ProcessJPanel(userProcessContainer, userAccount, enterprise, request);
        userProcessContainer.add("processJPanel", processJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshSendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshSendBtnActionPerformed

        populateProcessRequestTable();
    }//GEN-LAST:event_refreshSendBtnActionPerformed

    private void refreshSendBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshSendBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshSendBtn1ActionPerformed

    private void requestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestJButtonActionPerformed

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("PurchaingRequestJPanel", new PurchaingRequestJPanel(userProcessContainer, userAccount, enterprise, network));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestJButtonActionPerformed

    private void addOneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOneBtnActionPerformed
        // TODO add your handling code here:
        int row = inventoryJTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Material material = (Material)inventoryJTable.getValueAt(row, 0);
        material.setQuantity(material.getQuantity()+1);
    }//GEN-LAST:event_addOneBtnActionPerformed

    private void deleteOneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOneBtnActionPerformed
        // TODO add your handling code here:
        int row = inventoryJTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Material material = (Material)inventoryJTable.getValueAt(row, 0);
        if (material.getQuantity()== 0) {
            JOptionPane.showMessageDialog(null, "The amount is already 0.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        material.setQuantity(material.getQuantity()-1);
    }//GEN-LAST:event_deleteOneBtnActionPerformed

    private void refreshInventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshInventoryBtnActionPerformed
        // TODO add your handling code here:
        populateInventoryTable();
    }//GEN-LAST:event_refreshInventoryBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOneBtn;
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton deleteOneBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JTable inventoryJTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton processJButton;
    private javax.swing.JTable processRequestJTable;
    private javax.swing.JButton refreshInventoryBtn;
    private javax.swing.JButton refreshSendBtn;
    private javax.swing.JButton refreshSendBtn1;
    private javax.swing.JButton requestJButton;
    private javax.swing.JTable requestJTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
