/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.GourmetPurchasing;

import Business.Enterprise.NutritionDiningRoomEnterprise;
import Business.Enterprise.Enterprise;
import Business.Food.Material;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaterialRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author PhythonNo1
 */
public class ProcessJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private NutritionDiningRoomEnterprise enterprise;
    private MaterialRequest request;
    private UserAccount userAccount;
    private int flag1=0, flag2=0;
    //private Network network;
    /**
     * Creates new form ProcessJPanel
     */
    public ProcessJPanel(JPanel userProcessContainer, UserAccount userAccount,NutritionDiningRoomEnterprise enterprise, MaterialRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.request = request;
        this.userAccount = userAccount;
        valueLabel.setText(enterprise.getName());
        //materialCBox
        materialCBox.removeAllItems();
        for (Material material : enterprise.getMaterialDirectory().getMaterialList()) {
            materialCBox.addItem(material);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        quantityTxt = new javax.swing.JTextField();
        materialCBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sendJButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        enterpriseLabel.setText("Department :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 53, 142, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 64, 130, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 207, -1, -1));
        add(quantityTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 139, 102, -1));

        materialCBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        materialCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                materialCBoxActionPerformed(evt);
            }
        });
        add(materialCBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 101, 104, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Material:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 105, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Quantity:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 142, -1, -1));

        sendJButton.setText("Send");
        sendJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendJButtonActionPerformed(evt);
            }
        });
        add(sendJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(283, 207, 86, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pic5.png"))); // NOI18N
        jLabel7.setMaximumSize(new java.awt.Dimension(911, 600));
        jLabel7.setMinimumSize(new java.awt.Dimension(500, 629));
        jLabel7.setPreferredSize(new java.awt.Dimension(500, 626));
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, 0, 840, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PurchasingWorkAreaJPanel pwjp = (PurchasingWorkAreaJPanel) component;
        pwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void materialCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_materialCBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_materialCBoxActionPerformed

    private void sendJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendJButtonActionPerformed
        // TODO add your handling code here:
        try{Integer.parseInt(quantityTxt.getText());}
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The quantity is invalid.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        for(Material material : enterprise.getMaterialDirectory().getMaterialList()) {
            if(material.getName().equals(materialCBox.getSelectedItem().toString())) {
                // quantity validation
                if(material.getQuantity()-Integer.parseInt(quantityTxt.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, material.getName() +" is insufficient.", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                //material.setQuantity(material.getQuantity()-Integer.parseInt(quantityTxt.getText()));
                request.setStatus("Completed: "+Integer.parseInt(quantityTxt.getText()));
                JOptionPane.showMessageDialog(null, "Order taken successfully.", "Message", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        NutritionDiningRoomEnterprise ent = (NutritionDiningRoomEnterprise) request.getSenderEnterprise();
        
        if (ent != null){
            for(Material material: ent.getMaterialDirectory().getMaterialList()) {
                if(material.getName().equals(materialCBox.getSelectedItem().toString())) {
                    material.setQuantity(material.getQuantity()+Integer.parseInt(quantityTxt.getText()));
                    flag1=1;
                    break;
                }
            }
                            
            // If the material name does not exist in Gourmet
            if (flag1 == 0) {
                Material sampleMaterial = (Material) materialCBox.getSelectedItem();
                Material newMaterial = ent.getMaterialDirectory().createMaterial();
                newMaterial.setName(sampleMaterial.getName());
                newMaterial.setPrice(sampleMaterial.getPrice());
                newMaterial.setQuantity(Integer.parseInt(quantityTxt.getText()));
            }
        }
        
        

        
        //request.setActualQuantity(Integer.parseInt(quantityTxt.getText()));
        
        
//        NutritionDiningRoomEnterprise ent = null;
//        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
//            if (enterprise.equals(request.getSenderEnterprise())){
//                ent = (NutritionDiningRoomEnterprise) enterprise;
//                break;
//            }
//        }
//        if (ent != null){
//            for(Material material: ent.getMaterialDirectory().getMaterialList()) {
//                if(material.getName().equals(materialCBox.getSelectedItem().toString())) {
//                    material.setQuantity(material.getQuantity()+Float.parseFloat(quantityTxt.getText()));
//                    flag1=1;
//                    break;
//                }
//            }
//                            
//            // If the material name does not exist in BarberShop
//            if (flag1==0) {
//                Material sampleMaterial = (Material) materialCBox.getSelectedItem();
//                Material newMaterial = ent.getMaterialDirectory().createMaterial();
//                newMaterial.setName(sampleMaterial.getName());
//                newMaterial.setPrice(sampleMaterial.getPrice());
//                newMaterial.setQuantity(Float.parseFloat(quantityTxt.getText()));
//            }
//        }
//        
//        // Record item in soldDirectory
//        for(Material material: enterprise.getSoldMaterialDirectory().getMaterialList()) {
//            if(material.getName().equals(materialCBox.getSelectedItem().toString())) {
//                material.setQuantity(material.getQuantity()+Integer.parseInt(quantityTxt.getText()));
//                flag2=1;
//                break;
//            }
//        }
//
//        // If the material name does not exist in BarberShop
//        if(flag2==0) {
//            Material sampleMaterial = (Material) materialCBox.getSelectedItem();
//            Material newMaterial = enterprise.getSoldMaterialDirectory().createMaterial();
//            newMaterial.setName(sampleMaterial.getName());
//            newMaterial.setPrice(sampleMaterial.getPrice());
//            newMaterial.setQuantity(Integer.parseInt(quantityTxt.getText()));
//        }
        
        
    }//GEN-LAST:event_sendJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox materialCBox;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JButton sendJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
