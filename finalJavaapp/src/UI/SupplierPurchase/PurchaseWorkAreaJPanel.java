/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SupplierPurchase;

import Business.Enterprise.SupplierEnterprise;
import Business.Food.Material;
import Business.Network.Network;
import Business.Organization.FarmerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaterialRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 李煜哲
 */
public class PurchaseWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SupplierEnterprise enterprise;
    private FarmerOrganization organization;
    private UserAccount userAccount;
    private Network network;
    /**
     * Creates new form TManagerWorkAreaJPanel
     */
    public PurchaseWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount,SupplierEnterprise enterprise, FarmerOrganization organization, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = userAccount;
        this.network = network;
        populateRequestTable();
        valueLabel.setText(enterprise.getName()+", "+organization.getName());
        // Add all material in the Supplier
        if(enterprise.getMaterialDirectory().getMaterialList().isEmpty()) {
            for (Material.MaterialType type : Material.MaterialType.values()) {
                Material material = enterprise.getMaterialDirectory().createMaterial();
                material.setName(type.getValue());
                material.setQuantity(0);
                material.setPrice(type.getPrice());
            }
        }
        
        populateProcessRequestTable();
        populateInventoryTable();
        populateRequestTable();
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();
        
        model.setRowCount(0);
        populateRequestTable();
        
    }

public void populateProcessRequestTable() {
        DefaultTableModel model = (DefaultTableModel)processRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request;
            int quantity = ((MaterialRequest) request).getQuantity();
            row[1] = quantity;
            String senderEnterprise = ((MaterialRequest) request).getSenderEnterprise().getName();
            row[2] = senderEnterprise;
            String receiverEnterprise ="";
            try{
                receiverEnterprise = ((MaterialRequest) request).getReceiverEnterprise().getName();
            }
            catch(Exception e) {;}
            row[3] = request.getReceiver() == null ? null : receiverEnterprise;
            row[4] = request.getStatus();
            
            model.addRow(row);
        }
    }
    
    public void populateInventoryTable() {
        DefaultTableModel model = (DefaultTableModel)inventoryJTable.getModel();
        model.setRowCount(0);
        
        for (Material material : enterprise.getMaterialDirectory().getMaterialList()) {
            Object[] row = new Object[2];
            row[0] = material;
            row[1] = material.getQuantity();
            
            model.addRow(row);
        }
    }
    
    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) requestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
//             DateFormat df1 = DateFormat.getDateInstance();
//            System.out.println(df1.format(request.getRequestDate())+df1.format(request.getResolveDate()));
            Object[] row = new Object[4];
            row[0] = request;
            int quantity = ((MaterialRequest) request).getQuantity();
            row[1] = quantity+"";
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            
            model.addRow(row);
           
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        processJButton = new javax.swing.JButton();
        refreshSendBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        processRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        refreshInventoryBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        refreshSendBtn1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        requestJButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        accountJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Book Antiqua", 1, 24)); // NOI18N
        enterpriseLabel.setText("Department :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 170, 30));

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 210, -1));

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, 90, -1));

        refreshSendBtn.setText("Refresh");
        refreshSendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshSendBtnActionPerformed(evt);
            }
        });
        add(refreshSendBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 90, -1));

        jLabel4.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 24)); // NOI18N
        jLabel4.setText("Process Request");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, -1, -1));

        processRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material", "Quantity", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(processRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 119, 427, 96));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 24)); // NOI18N
        jLabel2.setText("Supplier Inventory");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, -1, -1));

        refreshInventoryBtn.setText("Refresh");
        refreshInventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshInventoryBtnActionPerformed(evt);
            }
        });
        add(refreshInventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 90, -1));

        inventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Material", "Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(inventoryJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 422, 97));

        addJButton.setText("Add Material");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, -1, -1));

        refreshSendBtn1.setText("Refresh");
        refreshSendBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshSendBtn1ActionPerformed(evt);
            }
        });
        add(refreshSendBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, -1, -1));

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hair", "Quantity", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(requestJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 427, 97));

        requestJButton1.setText("Request");
        requestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestJButton1ActionPerformed(evt);
            }
        });
        add(requestJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 440, -1, -1));

        jLabel3.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 24)); // NOI18N
        jLabel3.setText("Request Materials");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, -1, -1));

        accountJButton.setText("Account");
        accountJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountJButtonActionPerformed(evt);
            }
        });
        add(accountJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 80, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pic9.png"))); // NOI18N
        jLabel6.setMaximumSize(new java.awt.Dimension(800, 600));
        jLabel6.setPreferredSize(new java.awt.Dimension(800, 626));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = processRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        MaterialRequest request = (MaterialRequest)processRequestJTable.getValueAt(selectedRow, 0);
        // Validate assignment
        if(request.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "Please click \"Assign to me\" first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        request.setStatus("Processing");

        PurchaseProcessJPanel processJPanel = new PurchaseProcessJPanel(userProcessContainer, userAccount, enterprise, network, request);
        userProcessContainer.add("processJPanel", processJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshSendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshSendBtnActionPerformed

        populateProcessRequestTable();
    }//GEN-LAST:event_refreshSendBtnActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = processRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        MaterialRequest request = (MaterialRequest)processRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setReceiverEnterprise(enterprise);
        request.setStatus("Pending");
        populateProcessRequestTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void refreshInventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshInventoryBtnActionPerformed
        // TODO add your handling code here:
        populateInventoryTable();
    }//GEN-LAST:event_refreshInventoryBtnActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        AddMaterialJPanel processJPanel = new AddMaterialJPanel(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("processJPanel", processJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addJButtonActionPerformed

    private void refreshSendBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshSendBtn1ActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_refreshSendBtn1ActionPerformed

    private void requestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestJButton1ActionPerformed

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("TManagerRequestJPanel", new PurchaseRequestJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestJButton1ActionPerformed

    private void accountJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountJButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("TManagerAccountJPanel", new AccountJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_accountJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountJButton;
    private javax.swing.JButton addJButton;
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JTable inventoryJTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton processJButton;
    private javax.swing.JTable processRequestJTable;
    private javax.swing.JButton refreshInventoryBtn;
    private javax.swing.JButton refreshSendBtn;
    private javax.swing.JButton refreshSendBtn1;
    private javax.swing.JButton requestJButton1;
    private javax.swing.JTable requestJTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
